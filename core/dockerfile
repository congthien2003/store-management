# Stage 1: Build
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /app
# Copy solution and project files
COPY *.sln ./
COPY StoreManagement.Application/*.csproj ./StoreManagement.Application/
COPY StoreManagement.Domain/*.csproj ./StoreManagement.Domain/
COPY StoreManagement.Infrastructure/*.csproj ./StoreManagement.Infrastructure/
COPY StoreManagement/*.csproj ./StoreManagement/

# Restore dependencies
RUN dotnet restore

COPY . .
WORKDIR "/src/."

RUN dotnet build "./StoreManagement.Domain.csproj" -c %BUILD_CONFIGURATION% -o /app/build

RUN dotnet build "./StoreManagement.Application.csproj" -c %BUILD_CONFIGURATION% -o /app/build

RUN dotnet build "./StoreManagement.Infrastructure.csproj" -c %BUILD_CONFIGURATION% -o /app/build

RUN dotnet build "./StoreManagement.csproj" -c %BUILD_CONFIGURATION% -o /app/build

# Copy the entire project and build
FROM build AS publish
COPY . .
WORKDIR /app
RUN dotnet publish -c Release -o /app/publish /p:UseAppHost=false

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "TestDocker.dll"]

# Expose the port
EXPOSE 5000

